name: CI/CD Pipeline PHP 8.4
on: [push]
jobs:
  generatejobs:
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
        php: ${{ steps.json_properties.outputs.versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: get jobs by matrix_8.4.json
        id: json_properties
        uses: zoexx/github-action-json-file-properties@release
        with:
            file_path: "matrix_8.4.json"
  fpm:
    strategy:
      fail-fast: false
      matrix: 
        php: ${{ fromJson(needs.generatejobs.outputs.php) }}
    name: PHP FPM ${{ matrix.php }}
    needs: generatejobs
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Vérifier si l'image Docker existe
        id: check_image
        continue-on-error: true
        run: docker pull php:${{ matrix.php }}-fpm
      - name: Setup Task
        if: steps.check_image.outcome == 'success'
        uses: go-task/setup-task@v1
      - name: "create FPM"
        if: steps.check_image.outcome == 'success'
        run: task create-fpm VERSION=${{ matrix.php }}
      - name: "Build FPM"
        if: steps.check_image.outcome == 'success'
        timeout-minutes: 60
        run: task build-fpm VERSION=${{ matrix.php }}
      - name: "Show images"
        if: steps.check_image.outcome == 'success'
        run: docker images
      - name: Set up QEMU
        if: steps.check_image.outcome == 'success' &&github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        run: task push
  apache:
    strategy:
      fail-fast: false
      matrix: 
        php: ${{ fromJson(needs.generatejobs.outputs.php) }}
    name: PHP APACHE ${{ matrix.php }}
    needs: generatejobs
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Vérifier si l'image Docker existe
        id: check_image
        continue-on-error: true
        run: docker pull php:${{ matrix.php }}-apache
      - name: Setup Task
        if: steps.check_image.outcome == 'success'
        uses: go-task/setup-task@v1
      - name: "create APACHE"
        if: steps.check_image.outcome == 'success'
        run: task create-apache VERSION=${{ matrix.php }}
      - name: "build APACHE"
        if: steps.check_image.outcome == 'success'
        timeout-minutes: 60
        run: task build-apache VERSION=${{ matrix.php }}
      - name: "Show images"
        if: steps.check_image.outcome == 'success'
        run: docker images
      - name: Set up QEMU
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker
        if: steps.check_image.outcome == 'success' && github.ref == 'refs/heads/main'
        run: task push