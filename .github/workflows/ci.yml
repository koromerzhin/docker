name: ci
on: [push]
jobs:
  start:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
    steps:
      - name: cdout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install npm dependencies
        run: npm install
      - name: linter markdown
        run: npm run lint:markdown
      - name: linter docker
        continue-on-error: true
        run: npm run lint:docker
  django:
    strategy:
      matrix:
        django: [2.2.27, 3.2.12, 4.0.2]
    name: DJANGO ${{ matrix.django }}
    needs: start
    runs-on: ubuntu-20.04
    steps:
      - name: cdout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install npm dependencies
        run: npm install
      - name: "Generate file SH"
        if: matrix.php != '4.0.2'
        run: npm run docker:build:django --folder=${{ matrix.django }}
      - name: "Generate file SH IF LAST"
        if: matrix.django == '4.0.2'
        run: npm run docker:build:django --folder=${{ matrix.django }} --latest
      - name: "Build image"
        run: ./build-django-${{ matrix.django }}.sh
      - name: "Show images"
        run: npm run docker:image:ls
      - name: Set up QEMU
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker
        if: github.ref == 'refs/heads/main'
        run: npm run docker:push:django
  php:
    strategy:
      matrix:
        php: [5.6.40, 7.4.12, 7.4.33, 8.0.15, 8.0.27, 8.1.6, 8.1.13, 8.1.13, 8.2.0, 8.2.1]
    name: PHP ${{ matrix.php }}
    needs: start
    runs-on: ubuntu-20.04
    steps:
      - name: cdout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install npm dependencies
        run: npm install
      - name: "Generate file SH"
        if: matrix.php != '8.2.1'
        run: npm run docker:build:php --folder=${{ matrix.php }}
      - name: "Generate file SH IF LAST"
        if: matrix.php == '8.2.1'
        run: npm run docker:build:php --folder=${{ matrix.php }} --latest
      - name: "Build image"
        run: ./build-php-${{ matrix.php }}.sh
      - name: "Show images"
        run: npm run docker:image:ls
      - name: Set up QEMU
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker
        if: github.ref == 'refs/heads/main'
        run: npm run docker:push:php

