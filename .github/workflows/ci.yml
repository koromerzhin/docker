name: Continuous Integration
on: [push]
jobs:
  start:
    runs-on: ubuntu-20.04
    steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: make node_modules
  tests:
    needs: start
    runs-on: ubuntu-20.04
    steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: linter markdown
        run: make linter readme
      - name: linter docker
        run: make linter dockerfile
  nodejs:
      needs: tests
      runs-on: ubuntu-20.04
      steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Generate image'
        run: make generate nodejs
  django:
      strategy:
        matrix:
          python: [3.9.0]
      name: DJANGO ${{ matrix.python }}
      needs: tests
      runs-on: ubuntu-20.04
      steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Generate image'
        run: make generate-django ${{ matrix.python }}
  phpfpm:
      strategy:
        matrix:
          php: [7.4.12, 8.0.15, 8.1.2]
      name: PHP ${{ matrix.php }}
      needs: tests
      runs-on: ubuntu-20.04
      steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Generate image'
        run: make generate-phpfpm ${{ matrix.php }}