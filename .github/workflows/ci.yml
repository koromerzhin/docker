name: Continuous Integration
on: [push]
jobs:
  install:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(package-lock.json)"
      - name: Cache npm dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm dependencies
        run: npm install
  linter:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: linter markdown
        run: make linter-readme
      - name: linter docker
        run: make linter-docker
    docker-angular:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: 'Generate image'
              run: make docker-generate-angular
    docker-django:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: 'Generate image'
              run: make docker-generate-django
    docker-phpfpm:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: 'Generate image'
              run: make docker-generate-phpfpm
    docker-react:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: 'Generate image'
              run: make docker-generate-react
    docker-vuejs:
        needs: install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: 'Generate image'
              run: make docker-generate-vuejs