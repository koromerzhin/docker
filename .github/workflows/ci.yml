name: Continuous Integration
on: [push]
jobs:
  start:
    runs-on: ubuntu-20.04
    steps:
      - name: cdout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: make node_modules

      - name: save start
        uses: actions/upload-artifact@v2
        with:
          name: homework
          path: .
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: get start
        uses: actions/download-artifact@v2
        with:
          name: start
      - name: linter markdown
        run: make linter readme
      - name: linter docker
        run: make linter dockerfile
  nodejs:
      needs: tests
      runs-on: ubuntu-20.04
      steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              submodules: recursive
          - name: 'Generate image'
            run: make docker-generate nodejs
  python:
      needs: tests
      runs-on: ubuntu-20.04
      steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              submodules: recursive
          - name: 'Generate image'
            run: make docker-generate python
  phpfpm:
      needs: tests
      runs-on: ubuntu-20.04
      steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              submodules: recursive
          - name: 'Generate image'
            run: make docker-generate phpfpm